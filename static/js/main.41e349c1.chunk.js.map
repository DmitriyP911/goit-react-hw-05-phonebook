{"version":3,"sources":["Components/FormAddContact/styles/contactsStyle.module.css","Components/Notification/notificationStyle.module.css","Components/FormAddContact/styles/phonebookStyles.module.css","Components/FormAddContact/styles/formStyles.module.css","Components/FormAddContact/ContactList/Form.jsx","Components/FormAddContact/ContactList/ContactList.jsx","Components/FormAddContact/ContactList/Phonebook.jsx","Components/Notification/Notification.jsx","Components/App.jsx","index.js","transitions/slide.module.css"],"names":["module","exports","Form","state","name","number","id","shortId","generate","handleAddContact","e","setState","target","value","handleSubmit","preventDefault","props","onAddContact","this","className","styles","form","onSubmit","label","htmlFor","input","type","onChange","button","disabled","Component","ConactList","contactsFilter","contacts","Phonebook","contactsArr","onDelete","TransitionGroup","component","contactsList","map","contact","CSSTransition","key","timeout","unmountOnExit","classNames","slideTransition","li","onClick","Notification","titleWrap","title","App","filter","isOpen","contactToAdd","some","cont","toggleNotification","setTimeout","deleteContact","prevState","localStorage","setItem","JSON","stringify","savedContacts","getItem","parse","filteredContacts","toLowerCase","includes","filterContacts","main","in","appear","length","ContactList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.41e349c1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"contactsStyle_contacts__1Igsl\",\"input\":\"contactsStyle_input__3jdoa\",\"contactsList\":\"contactsStyle_contactsList__1i3eI\",\"li\":\"contactsStyle_li__6c81K\",\"button\":\"contactsStyle_button__FkXYm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"notificationStyle_title__X60pQ\",\"titleWrap\":\"notificationStyle_titleWrap__1UXTO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"phonebookStyles_main__AzcRM\",\"title\":\"phonebookStyles_title__1bAca\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"formStyles_form__6-9ox\",\"label\":\"formStyles_label__1id1F\",\"input\":\"formStyles_input__PLUy9\",\"button\":\"formStyles_button__3UJDD\"};","import React, { Component } from 'react';\r\nimport shortId from 'shortid';\r\nimport styles from '../styles/formStyles.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Form extends Component {\r\n\r\n    static propTypes = {\r\n        onAddContact: PropTypes.func.isRequired,\r\n    };\r\n\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n        id: shortId.generate()\r\n    }\r\n\r\n    handleAddContact = ( e ) => {\r\n        this.setState( {\r\n            [e.target.name]: e.target.value,\r\n        } )\r\n    }\r\n\r\n    handleSubmit = ( e ) => {\r\n        e.preventDefault();\r\n        this.props.onAddContact( { ...this.state } );\r\n\r\n        this.setState( {\r\n            name: '',\r\n            number: '',\r\n        } )\r\n    }\r\n\r\n    render () {\r\n        const { name, number } = this.state;\r\n        return (\r\n            <form className={styles.form}\r\n                onSubmit={this.handleSubmit}>\r\n                <label\r\n                    className={styles.label}\r\n                    htmlFor={shortId.generate()}>Name</label>\r\n                <input\r\n                    className={styles.input}\r\n                    value={name} name=\"name\"\r\n                    type=\"text\"\r\n                    onChange={this.handleAddContact} />\r\n                <label\r\n                    className={styles.label}\r\n                >Number</label>\r\n                <input\r\n                    className={styles.input}\r\n                    value={number}\r\n                    name=\"number\"\r\n                    type=\"number\"\r\n                    onChange={this.handleAddContact} />\r\n                <button\r\n                    className={styles.button}\r\n                    type=\"submit\"\r\n                    disabled={this.state.name === \"\" || this.state.number === \"\" && true} >\r\n                    Add conact\r\n                </button>\r\n            </form>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport styles from '../styles/contactsStyle.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ConactList = ( { value, contactsFilter } ) => (\r\n    <div\r\n        className={styles.contacts}\r\n    >\r\n        <h2>Find contacts</h2>\r\n        <input\r\n            className={styles.input}\r\n            name=\"search\" value={value}\r\n            type=\"text\"\r\n            onChange={contactsFilter} />\r\n    </div>\r\n)\r\n\r\nConactList.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    contactsFilter: PropTypes.func.isRequired\r\n}\r\n\r\nexport default ConactList;\r\n","import React from 'react';\r\nimport styles from '../styles/contactsStyle.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport slideTransition from '../../../transitions/slide.module.css';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst Phonebook = ( { contactsArr, onDelete } ) => (\r\n    <TransitionGroup component=\"ul\" className={styles.contactsList}>\r\n        {\r\n            contactsArr.map( contact => (\r\n                <CSSTransition\r\n                    key={contact.id}\r\n                    timeout={250}\r\n                    unmountOnExit\r\n                    classNames={slideTransition}\r\n                >\r\n                    <li\r\n                        key={contact.id}\r\n                        className={styles.li}\r\n                    >\r\n                        <p>{contact.name}</p>\r\n                        <p>Number: {contact.number}</p>\r\n                        <button\r\n                            className={styles.button}\r\n                            onClick={() => onDelete( contact.id )}>\r\n                            delete\r\n                        </button>\r\n                    </li>\r\n                </CSSTransition>\r\n            )\r\n            )\r\n        }\r\n    </TransitionGroup>\r\n)\r\n\r\nPhonebook.propTypes = {\r\n    contactsArr: PropTypes.array.isRequired,\r\n    onDelete: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Phonebook;\r\n","import React from 'react';\r\nimport styles from './notificationStyle.module.css'\r\n\r\nexport const Notification = () => (\r\n    <div className={styles.titleWrap}>\r\n        <h2 className={styles.title}>Contact already exist!</h2>\r\n    </div>\r\n)","import React, { Component } from 'react';\r\nimport Form from './FormAddContact/ContactList/Form';\r\nimport ContactList from './FormAddContact/ContactList/ContactList';\r\nimport Phonebook from './FormAddContact/ContactList/Phonebook';\r\nimport { Notification } from '../Components/Notification/Notification'\r\nimport shortId from 'shortid';\r\nimport slideTransition from '../transitions/slide.module.css';\r\nimport styles from './FormAddContact/styles/phonebookStyles.module.css';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nconst filterContacts = ( contacts, filter ) => {\r\n    return contacts.filter( contact => contact.name.toLowerCase().includes( filter.toLowerCase() ) )\r\n}\r\n\r\nexport default class App extends Component {\r\n\r\n    state = {\r\n        contacts: [],\r\n        filter: '',\r\n        isOpen: false\r\n    }\r\n\r\n    handleAddContact = ( contact ) => {\r\n        const contactToAdd = {\r\n            ...contact,\r\n            id: shortId.generate()\r\n        }\r\n        const { contacts } = this.state\r\n        if( contacts.some( cont => cont.number === contact.number ) ) {\r\n            this.toggleNotification();\r\n            setTimeout( this.toggleNotification, 3000 );\r\n            return\r\n        }\r\n        this.setState( state => ( {\r\n            contacts: [...state.contacts, contactToAdd]\r\n        } ) )\r\n    }\r\n\r\n    deleteContact = ( id ) => {\r\n        this.setState( prevState => ( {\r\n            contacts: prevState.contacts.filter( contact => contact.id !== id )\r\n        } ) )\r\n    }\r\n\r\n    toggleNotification = () => {\r\n        this.setState( prevState => ( { isOpen: !prevState.isOpen } ) )\r\n    }\r\n\r\n    contactsFilter = ( e ) => {\r\n        this.setState( {\r\n            filter: e.target.value\r\n        } )\r\n    }\r\n\r\n    componentDidUpdate ( prevState ) {\r\n        if( prevState.contacts !== this.state.contacts ) {\r\n            localStorage.setItem( 'contacts', JSON.stringify( this.state.contacts ) );\r\n        }\r\n    }\r\n\r\n    componentDidMount () {\r\n        const savedContacts = localStorage.getItem( 'contacts' );\r\n\r\n        if( savedContacts ) {\r\n            this.setState( { contacts: JSON.parse( savedContacts ) } );\r\n        }\r\n    }\r\n\r\n    render () {\r\n\r\n        const { contacts, filter, isOpen } = this.state;\r\n\r\n        const filteredContacts = filterContacts( contacts, filter )\r\n\r\n        return (\r\n            <div className={styles.main}>\r\n                <CSSTransition in timeout={500} classNames={slideTransition} appear>\r\n                    <h1 className={styles.title}>Phonebook</h1>\r\n                </CSSTransition>\r\n                <CSSTransition in={isOpen}\r\n                    classNames={slideTransition}\r\n                    timeout={500}\r\n                    unmountOnExit>\r\n                    < Notification />\r\n                </CSSTransition>\r\n                <Form\r\n                    onAddContact={this.handleAddContact} />\r\n                {\r\n                    this.state.contacts.length > 0 &&\r\n                    <div>\r\n                        <ContactList\r\n                            value={filter}\r\n                            contactsFilter={this.contactsFilter} />\r\n                        <Phonebook\r\n                            contactsArr={filteredContacts}\r\n                            onDelete={this.deleteContact} />\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById( 'root' )\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__3MShu\",\"enterActive\":\"slide_enterActive__2YHKq\",\"exit\":\"slide_exit__1hdnW\",\"exitActive\":\"slide_exitActive__1zQuc\",\"appear\":\"slide_appear__3Ptjh\",\"appearDone\":\"slide_appearDone___yg5P\"};"],"sourceRoot":""}